namespace siggraph;

// defines the algorithm of the key
enum KeyAlgorithm : ubyte {
    Ed25519 = 0,
}

// defines what the key is used for
enum KeyRole : ubyte {
    Signing = 0,
    Recovery,
}

// defines an action that creates a new key
table CreateKey {
    key: [ubyte];
    alg: KeyAlgorithm;
    role: KeyRole;
    effective_from: long;
}

// defines an action that revokes a key
table RevokeKey {
    key: [ubyte];
    effective_from: long;
}

// defines an action that recovers the account
table Recover {
    effective_from: long;
}

union Actionable { CreateKey, RevokeKey, Recover }

table Action {
    actionable: Actionable;
}

// defines an operation actioned at a given time with a collection of actions that it executes
table Operation {
    version: ubyte;
    sequence: uint;
    previous: [ubyte];
    timestamp: long;
    actions: [Action];
}

// defines details about a signature, such as the ed25519 public key identifier of the signer
table SignatureHeader {
    signer: [ubyte];
}

// defines an ed25519 signature and headers for an operation
table Signature {
    header: [ubyte];
    signature: [ubyte];
}

// defines an operation and its signatures.
// signatures are computed over a blake2b-256 hash of the coperation concatonated with the blake2b-256 hash of the signatures header
// signature( blake2b(operation) + blake2b(header))
table SignedOperation {
    operation: [ubyte];
    signatures: [Signature];
}

root_type SignedOperation;